/* Copyright 2009-2016 EPFL, Lausanne */

package leon.annotation

import scala.annotation.StaticAnnotation

object cCode {

  /*
   * Allows the user to manually define the implementation for a C function.
   *
   * `includes` can hold a colon separated list of required C99 include files.
   *
   * Because the actual names of the function itself and its parameters
   * might be changed by GenC, the `code` representing the C implementation
   * is expressed as a pattern: the function name should be denoted by the
   * __FUNCTION__ token.
   *
   * The parameters type in the manual implementation should exactly
   * match the ones generated by GenC.
   *
   * For convenience the C implementation generated by `code` is represented
   * using a String and not an Abstract Syntax Tree. The user is responsible
   * for making the correctness of the provided C99 code.
   *
   * Note that this annotation doesn't imply @extern but they can be
   * combined if needed.
   *
   * Example:
   * --------
   *
   *    // Print a 32-bit integer using the *correct*
   *    // format for printf in C99
   *    @cCode.function(
   *      includes = "inttypes.h:stdio.h",
   *      code = """
   *        |void __FUNCTION__(int32_t x) {
   *        |  printf("%"PRIi32, x);
   *        |}
   *        """
   *      }
   *    )
   *    def myprint(x: Int): Unit = {
   *      print(x)
   *    }
   *
   *
   * TODO in a later stage, when generics are supported, the instanciated type
   *      should be given to `code` somehow.
   *
   * NOTE As of April 2016, static annotation only supports literal parameters.
   */
  @ignore
  class function(
    includes: String,
    code: String
  ) extends StaticAnnotation

  /*
   * Allows the user to define a type (e.g. case class) as a typedef to an
   * existing type with an optional include file.
   *
   * NOTE Using this annotation implies that any member function or attribute
   *      of the underlying Scala type will not be translated into C code.
   *
   * Example:
   * --------
   *
   *    @cCode.typedef(alias = "FILE*", include = "stdio.h")
   *    case class FileStream(<some Scala properties>)
   *
   */
  @ignore
  class typedef(alias: String, include: String = "") extends StaticAnnotation

}
